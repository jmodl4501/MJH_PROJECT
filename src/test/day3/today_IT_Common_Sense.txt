Calculator 프로젝트가 끝났어요.
다음 번 프로젝트를 진행하기 전에 알아둬야할 상식을 잠깐 나눠보려고 해요.

<1.4 클라이언트-서버 아키텍처의 진화>
(구) Visual Basic, 파워빌더, 델파이로 C/S 시스템 구축 → (현재) 서버는 데이터 처리역할만 담당. 현재의 서버는 DBMS를 가르키는 용어가 되었지요.
* DBMS? 데이터베이스 관리 시스템. DB내 데이터에 접근할 수 있도록 만들어주는 소프트웨어 도구의 집합 SERVICE.

1) 전통 클라이언트-서버 아키텍처 (다르게말하면 옛날 거)
서버는 데이터 처리, 클라이언트는 UI/비즈니스 처리.
"대충 그림: 클라이언트[UI, 비즈니스 로직] (데이터요청)→  ←(결과데이터) 서버[데이터처리]"

*뭐가 후달리나?
프로그램이 변경되면 PC에 다시 환경셋팅을 해야됨. 메인프레임 방식은 서버만 바꾸면 되지만 C/S방식은 클라이언트 싹 다 뜯어고쳐야 함.
특히 요새는 빠르게 바뀌니까 이거 안됨. 게다가 클라이언트에서 바로 DBMS 접속하니까 보안문제가 발생함.   

2) 개선된 클라이언트-서버 아키텍처 (요즘 거)
클라이언트의 비즈니스 로직을 서버에 이관해요. 클라이언트는 오로지 사용자와 상호작용하는 UI만 담당하게 된거죠.
그래서 클라이언트 영역을 프론트엔드, 서버 영역을 백엔드라고 나누었죠.
프론트엔드에서 UI만 담당하니 백엔드 개발자가 '프론트엔트 개발자는 개발자가 아니다'라는 소리까지 나오는 거 같아요 ㅋㅋ

대충 그림: 클라이언트[UI,입력 데이터 검증]
         (데이터 처리요청)↓  ↑(처리결과 응답)
         애플리케이션 서버[비즈니스로직, 사용자 접근 관리]
         (SQL 질의)↓  ↑(SQL 응답)
         서버[데이터 처리]
         
이런 구조를 알고나니까 설치형 에이전트 구조는 C/S방식였네요. 이 방식이 2개에서 3개(클라이언트-클서버-서버)로 개선된 클라이언트-서버 아키텍처로 변한 것이지요 ~
엥? 웹 아니었어? 그냥 설치형 프로그램이 이런 구조라는 거에요.
서버에 응답을 받을 때마다 UI를 그려서 클라이언트에 뿌려주고, 사용자는 바뀐 화면을 다루는 구조로 바뀌는 거는 웹이죠.
우리가 사용하는 웹 애플리케이션도 처음 "전통 클라이언트-서버 아키텍처"에서 변형된 건데요! 그 구조를 말씀드릴게요.

<1.5 웹 애플리케이션 아키텍처의 특징> 
대충 그림: 웹 브라우저[사용자와 상호작용, UI렌더링*]
         (요청)↓ HTTP  ↑(응답)
         웹 서버[클라이언트와 통신, 다중 클라이언트의 접속관리]
           (위임)↓  ↑(결과)
         애플리케이션 서버[비즈니스로직, 사용자 접근 관리, UI생성(]
         (SQL 질의)↓  ↑(SQL 응답)
         서버[데이터 처리]
         
* 'UI렌더링'이 뭐고? HTML, CSS, JS를 화면(UI)로 만들어주는 과정을 말해요.

<1.5.1 웹 애플리케이션 실습>
워후! 드디어 톰캣 설치한다~
톰캣은 왜 설치하고 서블릿, 서블릿.. 서블릿이 뭔데?

*서블릿: 자바로 만든 웹 애플리케이션
*서블릿 실행하려면 Java EE규약에 따른 '서블릿 컨테이너'가 필요함. 톰캣이 바로 이 서블릿 컨테이너!!
실무에서는 안정성을 위해 항상 1~2버전 낮은 것을 사용함.

톰캣실행은 해당 경로에서. 
{user_project}\server\bin\start.bat

------------참고자료--------------
설치 및 서버띄우기
링크(https://tomcat.apache.org/download-80.cgi)
8.0: 자바 E7 / 7.0: 자바 E6. 우리는 7.0 받음
경로: C:\javaide\server에 압축풀기
C:\javaide\server\apache-tomcat-8.5.69\bin\startup.bat 실행
포트변경방법
C:\javaide\server\apache-tomcat-8.5.69\conf\server.xml
<Connector port="8080" protocol="HTTP/1.1" => "9999"로 변경
접속 테스트: localhost:8080에 들어가지면 접속가능.

톰캣 폴더구조.
bin: 실행관련 배치파일이나 스크립트 파일.
conf: 설정파일
webapps: 웹 애플리케이션을 배치하는 파일.
work: jsp를 자바 서블릿 소스로 변환한 파일.

톰캣에서 start.bat를 실행해서 계속 껐다킬 수는 없으니까 이클립스 Server탭에서 WTP(Web Tools Platform)로 껐다 키게 제공함.
어떻게?
 - 이클립스 > Preferences > Server > Runtime Environments > [Add]버튼 클릭


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
어디까지 했나? 톰캣 설치하다가 계속 튕겨서 그거 잡는 중. 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

